[{"title":"Vue.js 双向数据绑定原理分析","url":"http://hysunny.me/2017/07/02/two-way-data-binding-in-vuejs/","content":"<p>在使用Vue.js自定义组件时，很多时候，我们都期望数据是双向绑定的。</p>\n<hr>\n<h2 id=\"Vue-js实现双向数据绑定的两种方式\"><a href=\"#Vue-js实现双向数据绑定的两种方式\" class=\"headerlink\" title=\"Vue.js实现双向数据绑定的两种方式\"></a>Vue.js实现双向数据绑定的两种方式</h2><h3 id=\"1-v-model\"><a href=\"#1-v-model\" class=\"headerlink\" title=\"1. v-model\"></a>1. v-model</h3><p>调用组件时：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"something\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></div><div class=\"line\">或</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">:value</span>=<span class=\"string\">\"something\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>在组件内部，必须：</p>\n<ul>\n<li>接受一个 <code>value</code> 属性</li>\n<li>在有新的 value 时触发 <code>input</code> 事件</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.$emit(<span class=\"string\">'input'</span>, newValue)</div></pre></td></tr></table></figure>\n<p>如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;comp v-model=<span class=\"string\">\"something\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">Vue.component(<span class=\"string\">'comp'</span>, &#123;</div><div class=\"line\">\t...,</div><div class=\"line\">\tprops: [<span class=\"string\">'value'</span>],</div><div class=\"line\">\tcomputed: &#123;</div><div class=\"line\">\t\tcurrentValue: &#123;</div><div class=\"line\">\t\t\tget () &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.value</div><div class=\"line\">\t\t\t&#125;,</div><div class=\"line\">\t\t\tset (val) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.$emit(<span class=\"string\">'input'</span>, val)</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t...</div><div class=\"line\">&#125;）</div></pre></td></tr></table></figure>\n<h3 id=\"2-props-sync-修饰符\"><a href=\"#2-props-sync-修饰符\" class=\"headerlink\" title=\"2. props  .sync 修饰符\"></a>2. props  .sync 修饰符</h3><p>调用组件时：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">:foo.sync</span>=<span class=\"string\">\"bar\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>在组件内部，</p>\n<ul>\n<li>接受一个 <code>foo</code> 属性</li>\n<li>需要更新 <code>foo</code> 时，它需要显式地触发一个更新事件</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.$emit(<span class=\"string\">'update:foo'</span>, newValue)</div></pre></td></tr></table></figure>\n<p>如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;comp :foo.sync=<span class=\"string\">\"bar\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></span></div><div class=\"line\"></div><div class=\"line\">Vue.component(<span class=\"string\">'comp'</span>, &#123;</div><div class=\"line\">\t...,</div><div class=\"line\">\tprops: [<span class=\"string\">'foo'</span>],</div><div class=\"line\">\tdata () &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> &#123;</div><div class=\"line\">\t\t\tcurrentValue: <span class=\"keyword\">this</span>.foo</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\twatch: &#123;</div><div class=\"line\">\t\tcurrentValue (val, oldVal) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">this</span>.$emit(<span class=\"string\">'update:foo'</span>, val)</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t...</div><div class=\"line\">&#125;）</div></pre></td></tr></table></figure>\n<h2 id=\"Vue实现双向数据绑定的原理分析\"><a href=\"#Vue实现双向数据绑定的原理分析\" class=\"headerlink\" title=\"Vue实现双向数据绑定的原理分析\"></a>Vue实现双向数据绑定的原理分析</h2><p><code>v-model</code> 用于双向绑定数据，其本质为语法糖，即</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"something\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>相当于</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">v-bind:value</span>=<span class=\"string\">\"something\"</span> <span class=\"attr\">v-on:input</span>=<span class=\"string\">\"something = $event.target.value\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>props  <code>.sync</code> 修饰符 用于双向数据绑定，其本质也为语法糖，即</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;comp :foo.sync=&quot;bar&quot;&gt;&lt;/comp&gt;</div></pre></td></tr></table></figure>\n<p>相当于</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;comp :foo=&quot;bar&quot; @update:foo=&quot;val =&gt; bar = val&quot;&gt;&lt;/comp&gt;</div></pre></td></tr></table></figure>\n<p>以上，我们可以很容易的看出，实现一个自定义组件的双向数据绑定，其实就是父组件传递一个属性给子组件，在子组件中该属性的值改变时显式的去触发一个事件（v-model触发input事件，.sync触发update:props事件）。</p>\n<p>那在Vue.js内部究竟是如何实现双向数据绑定的呢？我们下面继续分析下。</p>\n<p>在Vue.js中，采用观察者-订阅者模式来进行双向数据绑定，通过<code>Object.defineProperty()</code>方法来劫持各个属性的setter，getter，在数据变动时发布消息给订阅者，触发相应的监听回调。</p>\n<p>既然是观察者-订阅者模式，那观察者-订阅者是如何实现的呢？我们来看源码</p>\n<p>观察者(Observer)关键代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Observer</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span> (data) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.walk(data)</div><div class=\"line\">    &#125;</div><div class=\"line\">    walk (data) &#123;</div><div class=\"line\">        <span class=\"comment\">// 遍历 data 对象属性，调用 defineReactive 方法</span></div><div class=\"line\">        <span class=\"keyword\">let</span> keys = <span class=\"built_in\">Object</span>.keys(data)</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; keys.length; i++)&#123;</div><div class=\"line\">            defineReactive(data, keys[i], data[keys[i]])</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>订阅者（Watcher）关键代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Watcher</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">constructor</span>(vm, expOrFn, cb) &#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.cb = cb</div><div class=\"line\">    <span class=\"keyword\">this</span>.vm = vm</div><div class=\"line\">    <span class=\"keyword\">this</span>.expOrFn = expOrFn</div><div class=\"line\">    <span class=\"keyword\">this</span>.value = <span class=\"keyword\">this</span>.get()</div><div class=\"line\">  &#125;</div><div class=\"line\">  update()&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.run()</div><div class=\"line\">  &#125;</div><div class=\"line\">  run()&#123;</div><div class=\"line\">    <span class=\"keyword\">const</span>  value = <span class=\"keyword\">this</span>.get()</div><div class=\"line\">    <span class=\"keyword\">if</span>(value !==<span class=\"keyword\">this</span>.value)&#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.value = value</div><div class=\"line\">      <span class=\"keyword\">this</span>.cb.call(<span class=\"keyword\">this</span>.vm)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  get()&#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> value = <span class=\"keyword\">this</span>.vm._data[<span class=\"keyword\">this</span>.expOrFn]</div><div class=\"line\">    <span class=\"keyword\">return</span> value</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>观察者和订阅者都有了，但是它们如何进行通信呢？</p>\n<p>首先，<br>观察者会遍历 data 对象的所有属性，每个属性通过调用 <code>defineReactive</code> 方法，转换为getter/setter</p>\n<p>defineReactive 关键代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">defineReactive</span>(<span class=\"params\">obj, key, value</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> dep = <span class=\"keyword\">new</span> Dep()</div><div class=\"line\">    <span class=\"built_in\">Object</span>.defineProperty(obj, key, &#123;</div><div class=\"line\">        enumerable: <span class=\"literal\">true</span>,</div><div class=\"line\">        configurable: <span class=\"literal\">true</span>,</div><div class=\"line\">        get: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reactiveGetter</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (Dep.target) &#123;</div><div class=\"line\">                dep.depend()  <span class=\"comment\">// 依赖收集</span></div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> value</div><div class=\"line\">        &#125;,</div><div class=\"line\">        set: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reactiveSetter</span>(<span class=\"params\">newVal</span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (value === newVal) &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span></div><div class=\"line\">            &#125; </div><div class=\"line\">            value = newVal</div><div class=\"line\">            <span class=\"comment\">// 对新值进行观测，如果改变则通知订阅者</span></div><div class=\"line\">            dep.notify()</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>defineReactive 方法将data的属性转换为访问器属性<br>get时进行依赖收集，<br>set时，如果数据有改变，则进行订阅通知</p>\n<p>通过上面的分析，我们知道了，观察者观测到数据更新时会通知订阅者，但是它是如何通知订阅者（Watcher）的呢？</p>\n<p>当然是通过订阅器了！</p>\n<p>订阅器(Dep)关键代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dep</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span> (id, subs) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.id = <span class=\"number\">0</span>++</div><div class=\"line\">        <span class=\"keyword\">this</span>.subs = []</div><div class=\"line\">    &#125;</div><div class=\"line\">    addSub () &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.subs.push(sub)</div><div class=\"line\">    &#125;</div><div class=\"line\">    removeSub () &#123;</div><div class=\"line\">        remove(<span class=\"keyword\">this</span>.subs, sub)</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    depend () &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (Dep.target) &#123;</div><div class=\"line\">        Dep.target.addDep(<span class=\"keyword\">this</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    notify () &#123;</div><div class=\"line\">        <span class=\"keyword\">const</span> subs = <span class=\"keyword\">this</span>.subs.slice()</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>, l = subs.length; i &lt; l; i++) &#123;</div><div class=\"line\">            subs[i].update()</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>通过订阅器，订阅者接收到数据改变的通知</p>\n<p>由此，<code>Observer</code> 、 <code>Dep</code>、 <code>Watcher</code> 就形成了一个数据响应系统，也就是Vue.js实现双向数据绑定最核心的原理。</p>\n","categories":[],"tags":[]},{"title":"overflow:auto/scroll在ios7及以下失效的解决方法","url":"http://hysunny.me/2015/12/12/the-solution-of-overflow-auto-or-scroll-not-work-under-ios7/","content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mbodycontainer\"</span> &gt;</span></div><div class=\"line\">\t   <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mbody\"</span>&gt;</span></div><div class=\"line\">\t   <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-id\">#mbodycontainer</span> &#123;</div><div class=\"line\">\t<span class=\"attribute\">position</span>: absolute; </div><div class=\"line\">\t<span class=\"attribute\">top</span>: <span class=\"number\">0</span>; </div><div class=\"line\">\t<span class=\"attribute\">left</span>: <span class=\"number\">0</span>; </div><div class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; </div><div class=\"line\">\t<span class=\"attribute\">overflow</span>: auto;</div><div class=\"line\">\t<span class=\"attribute\">overflow-x</span>: hidden; </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-id\">#mbody</span> &#123;</div><div class=\"line\">\t<span class=\"attribute\">position</span>: absolute; </div><div class=\"line\">\t<span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"attribute\">left</span>: <span class=\"number\">0</span>; </div><div class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">\t<span class=\"attribute\">min-height</span>: <span class=\"number\">100%</span>; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如上代码。</p>\n<p>当mbody内容溢出时，在安卓设备及iphone6、iphone6 plus上，浏览器会自动显示滚动条以便查看剩余的内容，<code>overflow:auto;</code>正常起作用。</p>\n<p>而在iphone5S及以下ios设备上（后发现是ios7系统及以下设备上）<code>overflow:auto;</code>失效，滚动条无法滚动，相当于<code>overflow:hidden;</code></p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><p>给父元素设置 <code>-webkit-overflow-scrolling: touch;</code></p>\n<p>即代码变成如下这样：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mbodycontainer\"</span> &gt;</span></div><div class=\"line\">\t   <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"mbody\"</span>&gt;</span></div><div class=\"line\">\t   <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-id\">#mbodycontainer</span> &#123;</div><div class=\"line\">\t<span class=\"attribute\">position</span>: absolute; </div><div class=\"line\">\t<span class=\"attribute\">top</span>: <span class=\"number\">0</span>; </div><div class=\"line\">\t<span class=\"attribute\">left</span>: <span class=\"number\">0</span>; </div><div class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>; </div><div class=\"line\">\t<span class=\"attribute\">overflow</span>: auto;</div><div class=\"line\">\t<span class=\"attribute\">overflow-x</span>: hidden; </div><div class=\"line\">\t<span class=\"attribute\">-webkit-overflow-scrolling</span>: touch;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-id\">#mbody</span> &#123;</div><div class=\"line\">\t<span class=\"attribute\">position</span>: absolute; </div><div class=\"line\">\t<span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"attribute\">left</span>: <span class=\"number\">0</span>; </div><div class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">\t<span class=\"attribute\">min-height</span>: <span class=\"number\">100%</span>; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>问题解决！在iphone5S及以下ios设备上overflow:auto;表现正常，可以滚动！</p>\n<hr>\n<p>注：原文章首发于：<a href=\"http://www.qdfuns.com/notes/15972/8bb161beb05be8383975af4c8fc534a2.html\" target=\"_blank\" rel=\"external\">overflow:auto/scroll在ios7及以下失效的解决方法</a>，现迁移至此。</p>\n","categories":[],"tags":[]},{"title":"href=\"#\",javascript:;与javascript:void(0)的区别","url":"http://hysunny.me/2015/12/05/the-difference-between-empty-link-ways/","content":"<p>项目中，我们经常会使用<code>&lt;a href=&quot;&quot;&gt;&lt;/a&gt;</code>标签来代替<code>&lt;input type=&quot;button&quot; /&gt;</code></p>\n<p>这种情况下,很多时候href并不指定超链接目标的URL，而是使用<code>href=&quot;#&quot;</code>, <code>javascript:;</code>与<code>javascript:void(0)</code>。</p>\n<p>那它们有什么区别呢？</p>\n<p>现在就来总结一下~</p>\n<hr>\n<h2 id=\"1-href-”-”\"><a href=\"#1-href-”-”\" class=\"headerlink\" title=\"1. href=”#”\"></a>1. href=”#”</h2><p>一个#表示锚点，默认为#top，点击之后会自动跳转到页面的顶部。</p>\n<p>缺点：当快速点击此链接时会导致浏览器很慢甚至崩溃。</p>\n<p>使用###（href=”###”）效果和javascript:void(0)一样，不会跳转到页面顶部。</p>\n<h2 id=\"2-javascript\"><a href=\"#2-javascript\" class=\"headerlink\" title=\"2. javascript:;\"></a>2. javascript:;</h2><p>javascript:;”直接返回undefined。</p>\n<h2 id=\"3-javascript-void-0\"><a href=\"#3-javascript-void-0\" class=\"headerlink\" title=\"3. javascript:void(0)\"></a>3. javascript:void(0)</h2><p>void是一个操作符，这个操作符指定要计算一个表达式但是不返回值。如果在void中写入0（void(0)）, 则要去执行一次表达式“0”，然后返回undefined</p>\n<hr>\n<p>注：原文章首发于：<a href=\"http://www.qdfuns.com/notes/15972/e29158a787f793eedbb00929dd77b2be.html\" target=\"_blank\" rel=\"external\">href=”#”,javascript:;与javascript:void(0)的区别</a>，现迁移至此。</p>\n","categories":[],"tags":[]},{"title":"DIV + CSS 自适应布局","url":"http://hysunny.me/2015/09/24/div-css-adaptive-layout/","content":"<p>昨天面试时被问到一个布局的问题：<br>   <code>两栏布局，左边定宽200px，右边自适应。如何实现？</code><br>我的第一个反应就是：用flex伸缩盒呀，然后balabala…<br>说完之后，面试官说，还有没有别的方法？flex有些浏览器不支持<br>嗯…我愣了一下，平常遇到这种问题貌似都是这么写的…<br>别的方法？我又想了想。JS?对，JS肯定可以。<br>然后就说，可以用JS获取当前窗口宽度，然后减去200px就是右边的宽度了<br>面试官：嗯，这样的确可以，但是布局一般不要用JS，还有没有别的方法？CSS的<br>额，这下我完全愣住了好嘛，人也变得有些紧张。还要别的方法啊，什么方法呢？？？<br>哎呀妈呀，想不出来，肿么办…<br>然后面试官看了我半天，十分体谅的说，那我们进行下一个问题吧…</p>\n<p>回来后，经过百度，哇！原来方法如此之多~还如此简单~<br>下面就来总结一下~</p>\n<hr>\n<h2 id=\"一-两栏布局（左定宽，右自动）\"><a href=\"#一-两栏布局（左定宽，右自动）\" class=\"headerlink\" title=\"一. 两栏布局（左定宽，右自动）\"></a>一. 两栏布局（左定宽，右自动）</h2><h3 id=\"1-float-margin\"><a href=\"#1-float-margin\" class=\"headerlink\" title=\"1. float + margin\"></a>1. float + margin</h3><p>即固定宽度元素设置float属性为left，自适应元素设置margin属性，margin-left应 <code>&gt;=</code> 定宽元素宽度</p>\n<p>举例：</p>\n<p>HTML代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_left\"</span>&gt;</span></div><div class=\"line\">        我是左栏</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_right\"</span>&gt;</span></div><div class=\"line\">        我是右栏</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>CSS代码</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span>,<span class=\"selector-tag\">body</span>,<span class=\"selector-tag\">div</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_left</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">float</span>: left;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: red;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_right</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">220px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: green;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong>注</strong>：使用的float属性，必要时清除一下浮动。</p>\n<p>Demo效果预览：<a href=\"/demo/div-css-adaptive-layout/float-margin-2.html\" target=\"_blank\">float + margin实现左定宽，右自动的两栏布局</a></p>\n<h3 id=\"2-position-margin\"><a href=\"#2-position-margin\" class=\"headerlink\" title=\"2. position + margin\"></a>2. position + margin</h3><p>即在父标签设置position属性为relative；子标签中定宽元素设置position属性为absolute；自适应元素设置margin属性，margin-left <code>&gt;=</code> 定宽元素宽度。</p>\n<p>举例：<br>HTML代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_left\"</span>&gt;</span></div><div class=\"line\">        我是左栏</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_right\"</span>&gt;</span></div><div class=\"line\">        我是右栏</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>CSS代码<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span>,<span class=\"selector-tag\">body</span>,<span class=\"selector-tag\">div</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">10px</span>;</div><div class=\"line\">    <span class=\"attribute\">position</span>: relative;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_left</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: red;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_right</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">220px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: green;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Demo效果预览：<a href=\"/demo/div-css-adaptive-layout/position-margin-2.html\" target=\"_blank\">position + margin实现左定宽，右自动的两栏布局</a></p>\n<h3 id=\"3-float-负margin\"><a href=\"#3-float-负margin\" class=\"headerlink\" title=\"3. float + 负margin\"></a>3. float + 负margin</h3><p>即给自适应宽度元素定义一个父标签，并设置float属性为left；width为100%；自适应宽度元素设置margin，margin-left应 <code>&gt;=</code> 定宽元素宽度；<br>固定宽度元素设置margin-left属性为<code>负值</code>：-100%；<br>除此之外应注意HTML结构中应先写自适应元素，再写固定宽度元素。</p>\n<p>举例：</p>\n<p>HTML代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_right\"</span>&gt;</span></div><div class=\"line\">        我是右栏</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_left\"</span>&gt;</span></div><div class=\"line\">        我是左栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>CSS代码<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span>,<span class=\"selector-tag\">body</span>,<span class=\"selector-tag\">div</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">float</span>: left;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap</span> <span class=\"selector-class\">.wrap_right</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">220px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: green;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_left</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">float</span>: left;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100%</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: red;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>注</strong>：使用的float属性，必要时清除一下浮动。</p>\n<p>Demo效果预览：<a href=\"/demo/div-css-adaptive-layout/float-negative-margin-2.html\" target=\"_blank\">float + 负margin实现左定宽，右自动的两栏布局</a></p>\n<h3 id=\"4-用table布局实现\"><a href=\"#4-用table布局实现\" class=\"headerlink\" title=\"4. 用table布局实现\"></a>4. 用table布局实现</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"300\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">width</span>=<span class=\"string\">\"200\"</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">\"red\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">\"green\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>不过这个方法，一定要设置高度才可以~</p>\n<p>Demo效果预览：<a href=\"/demo/div-css-adaptive-layout/table-2.html\" target=\"_blank\">table实现左定宽，右自动的两栏布局</a></p>\n<h3 id=\"5-触发BFC实现\"><a href=\"#5-触发BFC实现\" class=\"headerlink\" title=\"5. 触发BFC实现\"></a>5. 触发BFC实现</h3><p>关于BFC是什么、怎么触发BFC以及BFC可以用来做什么，大家可以看看这篇，<a href=\"http://www.cnblogs.com/lhb25/p/inside-block-formatting-ontext.html\" target=\"_blank\">前端精选文摘：BFC 神奇背后的原理</a></p>\n<p>实现方法，即为定宽元素设置float:left;自适应宽度元素设置可以触发BFC的属性。</p>\n<p>举例：<br>HTML代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_left\"</span>&gt;</span></div><div class=\"line\">    我是左栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_right\"</span>&gt;</span></div><div class=\"line\">    我是右栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>CSS代码：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span>,<span class=\"selector-tag\">body</span>,<span class=\"selector-tag\">div</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.wrap_left</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">float</span>: left;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: red;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_right</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: green;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Demo效果预览：<a href=\"/demo/div-css-adaptive-layout/BFC-2.html\" target=\"_blank\">BFC实现左定宽，右自动的两栏布局</a></p>\n<p>前面有说到一般我都是用的flex伸缩盒，那也来说一下用flex怎么实现的吧</p>\n<h3 id=\"6-flex伸缩盒方法\"><a href=\"#6-flex伸缩盒方法\" class=\"headerlink\" title=\"6. flex伸缩盒方法\"></a>6. flex伸缩盒方法</h3><p>即父标签设置<code>display:flex</code>属性，自适应元素设置<code>flex-grow:1</code>;</p>\n<p>举例：</p>\n<p>HTML代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_left\"</span>&gt;</span></div><div class=\"line\">        我是左栏</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_right\"</span>&gt;</span></div><div class=\"line\">        我是右栏</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>CSS代码</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span>,<span class=\"selector-tag\">body</span>,<span class=\"selector-tag\">div</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">    <span class=\"attribute\">display</span>: -webkit-flex;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_left</span>&#123;\t\t</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: red;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_right</span>&#123;\t</div><div class=\"line\">    <span class=\"attribute\">flex-grow</span>:<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"attribute\">-webkit-flex-grow</span>:<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: green;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Demo效果预览：<a href=\"/demo/div-css-adaptive-layout/flex-2.html\" target=\"_blank\">flex实现左定宽，右自动的两栏布局</a></p>\n<h2 id=\"二、三栏布局（两侧定宽，中间自适应）\"><a href=\"#二、三栏布局（两侧定宽，中间自适应）\" class=\"headerlink\" title=\"二、三栏布局（两侧定宽，中间自适应）\"></a>二、三栏布局（两侧定宽，中间自适应）</h2><p>掌握了上面的方法，我们会发现制作一个三栏布局也是非常容易的。<br>下面我们在上面栗子的基础上，看看实现一个两侧定宽，中间自适应的三栏布局如何实现</p>\n<h3 id=\"1-float-margin-1\"><a href=\"#1-float-margin-1\" class=\"headerlink\" title=\"1. float + margin\"></a>1. float + margin</h3><p>举例：</p>\n<p>HTML代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_left\"</span>&gt;</span></div><div class=\"line\">    我是左栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_right\"</span>&gt;</span></div><div class=\"line\">    我是右栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_content\"</span>&gt;</span></div><div class=\"line\">    我是中间栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>CSS代码<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span>,<span class=\"selector-tag\">body</span>,<span class=\"selector-tag\">div</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_left</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">float</span>: left;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: red;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.wrap_content</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">220px</span>;</div><div class=\"line\">    <span class=\"attribute\">margin-right</span>: <span class=\"number\">220px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: yellow;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_right</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">float</span>: right;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: green;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Demo效果预览：<a href=\"/demo/div-css-adaptive-layout/float-margin-3.html\" target=\"_blank\">float + margin实现两侧定宽，中间自适应的三栏布局</a></p>\n<h3 id=\"2-position-margin-1\"><a href=\"#2-position-margin-1\" class=\"headerlink\" title=\"2. position + margin\"></a>2. position + margin</h3><p>举例： </p>\n<p>HTML代码：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_left\"</span>&gt;</span></div><div class=\"line\">    我是左栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_right\"</span>&gt;</span></div><div class=\"line\">    我是右栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_content\"</span>&gt;</span></div><div class=\"line\">    我是中间栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>CSS代码<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span>,<span class=\"selector-tag\">body</span>,<span class=\"selector-tag\">div</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_left</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: red;</div><div class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.wrap_content</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">220px</span>;</div><div class=\"line\">    <span class=\"attribute\">margin-right</span>: <span class=\"number\">220px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: yellow;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_right</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">position</span>: absolute;</div><div class=\"line\">    <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: green;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Demo效果预览：<a href=\"/demo/div-css-adaptive-layout/position-margin-3.html\" target=\"_blank\">position + margin实现两侧定宽，中间自适应的三栏布局</a></p>\n<h3 id=\"3-float-负margin-1\"><a href=\"#3-float-负margin-1\" class=\"headerlink\" title=\"3. float + 负margin\"></a>3. float + 负margin</h3><p>举例：<br>HTML代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_content\"</span>&gt;</span></div><div class=\"line\">        我是中间栏</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_left\"</span>&gt;</span></div><div class=\"line\">    我是左栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_right\"</span>&gt;</span></div><div class=\"line\">    我是右栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>CSS代码<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span>,<span class=\"selector-tag\">body</span>,<span class=\"selector-tag\">div</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">float</span>: left;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_left</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">float</span>: left;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">100%</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: red;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_content</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">220px</span>;</div><div class=\"line\">    <span class=\"attribute\">margin-right</span>: <span class=\"number\">220px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: yellow;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_right</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">float</span>: left;</div><div class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: green;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Demo效果预览：<a href=\"/demo/div-css-adaptive-layout/float-negative-margin-3.html\" target=\"_blank\">float + 负margin实现两侧定宽，中间自适应的三栏布局</a></p>\n<h3 id=\"4-table实现\"><a href=\"#4-table实现\" class=\"headerlink\" title=\"4. table实现\"></a>4. table实现</h3><p>举例：<br>HTML代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"300\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">width</span>=<span class=\"string\">\"200\"</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">\"red\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">\"yellow\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">width</span>=<span class=\"string\">\"200\"</span> <span class=\"attr\">bgcolor</span>=<span class=\"string\">\"green\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>Demo效果预览：<a href=\"/demo/div-css-adaptive-layout/table-3.html\" target=\"_blank\">table实现两侧定宽，中间自适应的三栏布局</a></p>\n<h3 id=\"5-BFC方法\"><a href=\"#5-BFC方法\" class=\"headerlink\" title=\"5. BFC方法\"></a>5. BFC方法</h3><p>举例：<br>HTML代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_left\"</span>&gt;</span></div><div class=\"line\">    我是左栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_right\"</span>&gt;</span></div><div class=\"line\">    我是右栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_content\"</span>&gt;</span></div><div class=\"line\">    我是中间栏</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>CSS代码<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span>,<span class=\"selector-tag\">body</span>,<span class=\"selector-tag\">div</span>&#123;</div><div class=\"line\">\t<span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.wrap_left</span>&#123;</div><div class=\"line\">\t<span class=\"attribute\">float</span>: left;</div><div class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">\t<span class=\"attribute\">background-color</span>: red;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_right</span>&#123;</div><div class=\"line\">\t<span class=\"attribute\">float</span>: right;</div><div class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">\t<span class=\"attribute\">background-color</span>: green;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_content</span>&#123;</div><div class=\"line\">\t<span class=\"attribute\">overflow</span>: hidden;</div><div class=\"line\">\t<span class=\"attribute\">background-color</span>: yellow;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>注：HTML中先写定宽元素，再写自适应宽度元素。</p>\n<p>Demo效果预览：<a href=\"/demo/div-css-adaptive-layout/BFC-3.html\" target=\"_blank\">BFC实现两侧定宽，中间自适应的三栏布局</a></p>\n<h3 id=\"6-flex伸缩盒方法-1\"><a href=\"#6-flex伸缩盒方法-1\" class=\"headerlink\" title=\"6. flex伸缩盒方法\"></a>6. flex伸缩盒方法</h3><p>即父标签设置display:flex属性，自适应元素设置flex-grow:1;<br>HTML代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_left\"</span>&gt;</span></div><div class=\"line\">        我是左栏</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_content\"</span>&gt;</span></div><div class=\"line\">        我是中间栏</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wrap_right\"</span>&gt;</span></div><div class=\"line\">        我是右栏</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>CSS代码</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span>,<span class=\"selector-tag\">body</span>,<span class=\"selector-tag\">div</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>: flex;</div><div class=\"line\">    <span class=\"attribute\">display</span>: -webkit-flex;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_left</span>&#123;\t\t</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: red;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_right</span>&#123;\t</div><div class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: green;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.wrap_content</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">flex-grow</span>:<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"attribute\">-webkit-flex-grow</span>:<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"attribute\">background-color</span>: yellow;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Demo效果预览：<a href=\"/demo/div-css-adaptive-layout/flex-3.html\" target=\"_blank\">flex实现两侧定宽，中间自适应的三栏布局</a></p>\n<p>哦可~</p>\n","categories":[],"tags":[]},{"title":"CSS选择器、优先级以及!important知识总结","url":"http://hysunny.me/2015/08/12/css-selector/","content":"<h2 id=\"一、CSS选择器\"><a href=\"#一、CSS选择器\" class=\"headerlink\" title=\"一、CSS选择器\"></a>一、CSS选择器</h2><p>关于CSS选择器，首先请看这里：<a href=\"http://www.w3school.com.cn/cssref/css_selectors.asp\" target=\"_blank\" rel=\"external\">CSS 选择器参考手册</a> </p>\n<p>通过以上，我们可以将CSS选择器分为以下几种：</p>\n<h3 id=\"基本选择器\"><a href=\"#基本选择器\" class=\"headerlink\" title=\"基本选择器\"></a>基本选择器</h3><ol>\n<li>ID选择器（#footer），匹配所有id属性等于footer的元素。 </li>\n<li>类选择器（.info），匹配所有class属性中包含info的元素。</li>\n<li>通用选择器（*），匹配任何元素。</li>\n<li>标签选择器（E），匹配所有使用E标签的元素。</li>\n<li>同级元素选择器（E~F ），匹配任何在E元素之后的同级F元素(CSS3)。</li>\n</ol>\n<p>示例：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-id\">#footer</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#999</span>;&#125;</div><div class=\"line\"><span class=\"selector-class\">.info</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#000</span>;&#125;</div><div class=\"line\">* &#123; <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;<span class=\"attribute\">padding</span>: <span class=\"number\">0</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> <span class=\"number\">#000000</span> solid; &#125;</div><div class=\"line\"><span class=\"selector-tag\">p</span> ~ <span class=\"selector-tag\">ul</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#000000</span>; &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"属性选择器\"><a href=\"#属性选择器\" class=\"headerlink\" title=\"属性选择器\"></a>属性选择器</h3><p>说明：以下E表示元素，attr表示属性，val表示属性的值。</p>\n<ol>\n<li><p><code>E[attr]</code>选择器</p>\n<p> 匹配所有具有attr属性的E元素，不考虑它的值。（注：E在此处可以省略，比如“[checked]”.）</p>\n<p> 示例1：匹配所有含有title属性的div元素</p>\n <script async src=\"//jsfiddle.net/hysunny/qbLthqdo/embed/html,css,result/\"></script>\n\n<p> 示例2：匹配所有含有title属性的元素</p>\n <script async src=\"//jsfiddle.net/hysunny/xsero02u/1/embed/html,css,result/\"></script>\n\n<p> 看出区别了么~示例2就是比示例1省略了元素名div~    </p>\n</li>\n<li><p><code>E[attr=val]</code></p>\n<p> 匹配所有attr属性值为val的E元素。（注：同上，这里的E也可以省略。）</p>\n<p> 示例：匹配所有class值为test的p元素</p>\n <script async src=\"//jsfiddle.net/hysunny/2bpw297m/embed/html,css,result/\"></script>\n</li>\n<li><p><code>E[attr~=val]</code></p>\n<p> 匹配具有attr属性且属性值用空格分隔的字符列表。</p>\n<p> 示例：匹配具有class属性且其中一个属性值为name的div元素</p>\n <script async src=\"//jsfiddle.net/hysunny/fdpt62vw/embed/html,css,result/\"></script>\n\n<p> 运行代码，我们可以看到第一个div会应用上面的样式~</p>\n</li>\n<li><p><code>E[attr|=val]</code></p>\n<p> 匹配具有attr属性且属性值为用连接符（-）分隔的字符串，并以val开头的E元素。</p>\n<p> 示例: 匹配所有以test开头并以-连接的具有class属性的div元素</p>\n <script async src=\"//jsfiddle.net/hysunny/51L8p5jh/embed/html,css,result/\"></script>\n\n<p> 运行代码，可以看出第二个div会应用上面的样式~</p>\n</li>\n<li><p><code>E[attr^=&quot;val&quot;]</code>,属性attr的值以”val”开头的元素（CSS3）。</p>\n</li>\n<li><code>E[attr$=“val”]</code>,属性attr的值以”val”结尾的元素（CSS3）。</li>\n<li><code>E[attr*=&quot;val&quot;]</code>,属性attr的值包含”val”字符串的元素（CSS3）。    </li>\n</ol>\n<h3 id=\"组合选择器\"><a href=\"#组合选择器\" class=\"headerlink\" title=\"组合选择器\"></a>组合选择器</h3><ol>\n<li><p>多元素选择器（<code>E, F</code>），同时匹配多有E元素或F元素。</p>\n<p> 示例：</p>\n <script async src=\"//jsfiddle.net/hysunny/5e4vunwt/embed/html,css,result/\"></script>\n</li>\n<li><p>后代选择器（<code>E F</code>），匹配所有属于E元素后代的F元素，E和F之间用空格分隔。    </p>\n<p> 示例：</p>\n <script async src=\"//jsfiddle.net/hysunny/3u5edmcr/embed/html,css,result/\"></script>\n</li>\n<li><p>子元素选择器（<code>E &gt; F</code>）， 匹配所有E元素的子元素F。</p>\n<p> 示例：</p>\n <script async src=\"//jsfiddle.net/hysunny/u2gtgbzu/embed/html,css,result/\"></script>\n</li>\n<li><p>相邻选择器（<code>E + F</code>），匹配所有紧随E元素之后的同级元素F。</p>\n<p>示例：</p>\n<script async src=\"//jsfiddle.net/hysunny/0xf31rbk/embed/html,css,result/\"></script>\n\n<p>可以发现，我们的样式只对紧跟div的第一个p元素起作用~</p>\n</li>\n</ol>\n<h3 id=\"伪类选择器\"><a href=\"#伪类选择器\" class=\"headerlink\" title=\"伪类选择器\"></a>伪类选择器</h3><p>说明：以下E表示元素</p>\n<h4 id=\"CSS2-1中的伪类：\"><a href=\"#CSS2-1中的伪类：\" class=\"headerlink\" title=\"CSS2.1中的伪类：\"></a>CSS2.1中的伪类：</h4><ol>\n<li><code>E:first-child</code>, 匹配父元素的第一个元素。</li>\n<li><code>E:link</code>, 匹配所有未被点击的链接.</li>\n<li><code>E:visited</code>, 匹配所有已被点击的链接。</li>\n<li><code>E:active</code>, 匹配鼠标已经将其按下，还没释放的E元素。</li>\n<li><code>E:hover</code>, 匹配鼠标悬停其上的E元素。</li>\n<li><code>E:focus</code>, 匹配获得当前焦点的E元素。</li>\n<li><code>E:lang(c)</code>, 匹配lang属性等于c的E元素。</li>\n</ol>\n<p>示例：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:first-child</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">font-style</span>: italic;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=text]</span><span class=\"selector-pseudo\">:focus</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#000</span>;</div><div class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#ffe</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=text]</span><span class=\"selector-pseudo\">:focus</span><span class=\"selector-pseudo\">:hover</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">q</span><span class=\"selector-pseudo\">:lang(sv)</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">quotes</span>: <span class=\"string\">\"\\201D\"</span> <span class=\"string\">\"\\201D\"</span> <span class=\"string\">\"\\2019\"</span> <span class=\"string\">\"\\2019\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"CSS2-1中的伪元素\"><a href=\"#CSS2-1中的伪元素\" class=\"headerlink\" title=\"CSS2.1中的伪元素\"></a>CSS2.1中的伪元素</h4><ol>\n<li><code>E:first-line</code>, 匹配E元素的第一行。</li>\n<li><code>E:first-letter</code>, 匹配E元素的第一个字母。</li>\n<li><code>E:before</code>, 在E元素之前插入生成的内容。</li>\n<li><code>E:after</code>, 在E元素之后插入生成的内容。</li>\n</ol>\n<p>示例：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:first-line</span> &#123; </div><div class=\"line\">  <span class=\"attribute\">font-weight</span>: bold; </div><div class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#600</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.preamble</span><span class=\"selector-pseudo\">:first-letter</span> &#123; </div><div class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">1.5em</span>; </div><div class=\"line\">  <span class=\"attribute\">font-weight</span>: bold; </div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.cbb</span><span class=\"selector-pseudo\">:before</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</div><div class=\"line\">  <span class=\"attribute\">display</span>: block;</div><div class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">17px</span>;</div><div class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">18px</span>;</div><div class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(top.png) no-repeat <span class=\"number\">0</span> <span class=\"number\">0</span>;</div><div class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">0</span> -<span class=\"number\">18px</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:link</span><span class=\"selector-pseudo\">:after</span> &#123;</div><div class=\"line\"> <span class=\"attribute\">content</span>: <span class=\"string\">\" (\"</span> <span class=\"built_in\">attr</span>(href) <span class=\"string\">\") \"</span>; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"CSS3中与用户界面有关的伪类\"><a href=\"#CSS3中与用户界面有关的伪类\" class=\"headerlink\" title=\"CSS3中与用户界面有关的伪类\"></a>CSS3中与用户界面有关的伪类</h4><ol>\n<li><code>E:enabled</code>, 匹配表单中激活的元素。</li>\n<li><code>E:disabled</code>, 匹配表单中禁用的元素。</li>\n<li><code>E:checked</code>, 匹配表单中被选中的radio（单选框）或checkbox（复选框）元素。</li>\n<li><code>E::selection</code>, 匹配用户当前选中的元素。</li>\n</ol>\n<p>示例：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">input</span><span class=\"selector-attr\">[type=\"text\"]</span><span class=\"selector-pseudo\">:disabled</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#ddd</span>; &#125;</div></pre></td></tr></table></figure>\n<h4 id=\"CSS3中的结构性伪类\"><a href=\"#CSS3中的结构性伪类\" class=\"headerlink\" title=\"CSS3中的结构性伪类\"></a>CSS3中的结构性伪类</h4><ol>\n<li><code>E:root</code>, 匹配文档的根元素，对于HTML文档，就是HTML元素。</li>\n<li><code>E:nth-child(n)</code>, 匹配其父元素的第n个子元素，第一个编号为1。</li>\n<li><code>E:nth-last-child(n)</code>, 匹配其父元素的倒数第n个子元素，第一个编号为1。</li>\n<li><code>E:nth-of-type(n)</code>, 与:nth-child()作用类似，但是仅匹配使用同种标签的元素。</li>\n<li><code>E:nth-last-of-type(n)</code>, 与:nth-last-child()作用类似，但是仅匹配使用同种标签的元素。</li>\n<li><code>E:last-child</code>, 匹配父元素的最后一个子元素，等同于:nth-last-child(1)。</li>\n<li><code>E:first-of-type</code>, 匹配父元素下使用同种标签的第一个子元素，等同于:nth-of-type(1).</li>\n<li><code>E:last-of-type</code>, 匹配父元素下使用同种标签的最后一个子元素，等同于:nth-last-of-type(1)。</li>\n<li><code>E:only-child</code>, 匹配父元素下仅有的一个子元素，等同于:first-child:last-child或:nth-child(1):nth-last-child(1).</li>\n<li><code>E:only-of-type</code>, 匹配父元素下使用同种标签的唯一一个子元素，等同于:first-of-type:last-of-type或:nth:first-of-type(1):nth-last-of-type(1).</li>\n<li><code>E:empty</code>, 匹配一个不包含任何子元素的元素，注意：文本节点也被看作子元素。</li>\n</ol>\n<p>示例：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:nth-child(3)</span> &#123; <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:nth-child(odd)</span> &#123; <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>;&#125;</div><div class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:nth-child(even)</span> &#123; <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:nth-child(3n+0)</span> &#123; <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:nth-child(3n)</span> &#123; <span class=\"attribute\">color</span>: <span class=\"number\">#f00</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">tr</span><span class=\"selector-pseudo\">:nth-child(2n+11)</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#ff0</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">tr</span><span class=\"selector-pseudo\">:nth-last-child(2)</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#ff0</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:last-child</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#ff0</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:only-child</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#ff0</span>; &#125;</div><div class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:empty</span> &#123; <span class=\"attribute\">background</span>: <span class=\"number\">#ff0</span>; &#125;</div></pre></td></tr></table></figure>\n<h4 id=\"CSS3的反选伪类\"><a href=\"#CSS3的反选伪类\" class=\"headerlink\" title=\"CSS3的反选伪类\"></a>CSS3的反选伪类</h4><p><code>E:not(s)</code>,匹配不符合当前选择器的任何元素</p>\n<p>示例：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-pseudo\">:not(p)</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"CSS3中的-target伪类\"><a href=\"#CSS3中的-target伪类\" class=\"headerlink\" title=\"CSS3中的:target伪类\"></a>CSS3中的:target伪类</h4><p><code>E:target</code>,匹配文档中特定”id”点击后的效果</p>\n<p>示例：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">h2</span><span class=\"selector-pseudo\">:target</span> &#123;</div><div class=\"line\">  <span class=\"attribute\">color</span>: white;</div><div class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#f60</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"后代元素选择器和子元素选择器的区别\"><a href=\"#后代元素选择器和子元素选择器的区别\" class=\"headerlink\" title=\"后代元素选择器和子元素选择器的区别\"></a>后代元素选择器和子元素选择器的区别</h3><p>这里我们简单讨论下后代元素选择器和子元素选择器的区别</p>\n<ol>\n<li><p>写法不一样：</p>\n<p> 后代元素选择器标识：空格</p>\n<p>   如：<code>ul li{ width:150px; }</code>,ul和li之间用空格隔开</p>\n<p> 子元素选择器标识：&gt;</p>\n<p>   如：<code>ul&gt;li{ width:150px; }</code>,ul和li之间用&gt;隔开</p>\n</li>\n<li><p>功能不一样<br> 接着上例来说:</p>\n<p> 后代选择器是选择ul包围的,所以元素中的所有li元素，包括子元素、孙元素、曾孙元素等等等。</p>\n<p> 子选择器仅仅选择ul包围的 子元素中的 li元素，不包括孙元素、曾孙元素等等等。</p>\n</li>\n<li><p>兼容性不一样：</p>\n<p> 后代选择器是所有浏览器都兼容的，都可使用。</p>\n<p> 子选择器在IE6、IE7、IE8中则是不被支持的选择器，各自bug！</p>\n</li>\n</ol>\n<p>示例：</p>\n<script async src=\"//jsfiddle.net/hysunny/ouhvho5v/embed/html,css,result/\"></script>    \n\n<h2 id=\"二、CSS优先级\"><a href=\"#二、CSS优先级\" class=\"headerlink\" title=\"二、CSS优先级\"></a>二、CSS优先级</h2><h3 id=\"什么是CSS优先级？\"><a href=\"#什么是CSS优先级？\" class=\"headerlink\" title=\"什么是CSS优先级？\"></a>什么是CSS优先级？</h3><p>CSS优先级是指CSS样式在浏览器中被解析的<code>先后顺序</code>。</p>\n<h3 id=\"样式的优先级\"><a href=\"#样式的优先级\" class=\"headerlink\" title=\"样式的优先级\"></a>样式的优先级</h3><p>多重样式（Mutiple Styles）：如果外部样式、内部样式和内联样式同时应用于同一个元素，就是多重样式的使用情况。</p>\n<p>一般情况下，（<code>外部</code>样式）External style sheet &lt;（<code>内部</code>样式）Internal style sheet &lt;（<code>内联</code>样式）Inline style</p>\n<p><strong>例外</strong>：如果外部样式放在内部样式的后面，则外部样式将会覆盖内部样式。</p>\n<p>示例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">utf-8</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"css\">      <span class=\"comment\">/* 内部样式 */</span></span></div><div class=\"line\"><span class=\"css\">      <span class=\"selector-tag\">h3</span>&#123;<span class=\"attribute\">color</span>:green;&#125;</span></div><div class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\"> </div><div class=\"line\">    <span class=\"comment\">&lt;!-- 外部样式 style.css --&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"style.css\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- 设置：h3&#123;color:blue;&#125; --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>测试！<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"选择器的优先级\"><a href=\"#选择器的优先级\" class=\"headerlink\" title=\"选择器的优先级\"></a>选择器的优先级</h3><p>给不同的选择器分配不同的权值</p>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>内联样式（style=””）</th>\n<th>id选择器</th>\n<th>类选择器/属性选择器/伪类选择器</th>\n<th>标签选择器</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>权重</td>\n<td>1000</td>\n<td>100</td>\n<td>10</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>解释：</p>\n<ol>\n<li>内联样式表的权值最高1000;</li>\n<li>id选择器权值100;</li>\n<li>类选择器/属性选择器/伪类选择器权值10;</li>\n<li>HTML标签选择器权值为1.</li>\n</ol>\n<p>示例</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/css\"</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#redP</span> <span class=\"selector-tag\">p</span> &#123;</span></div><div class=\"line\"><span class=\"css\">             <span class=\"comment\">/* 权值 = 100+1=101 */</span></span></div><div class=\"line\"><span class=\"css\">             <span class=\"selector-tag\">color</span>:<span class=\"selector-id\">#F00</span>;  <span class=\"comment\">/* 红色 */</span></span></div><div class=\"line\"><span class=\"undefined\">        &#125;</span></div><div class=\"line\"><span class=\"undefined\"> </span></div><div class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#redP</span> <span class=\"selector-class\">.red</span> <span class=\"selector-tag\">em</span> &#123;</span></div><div class=\"line\"><span class=\"css\">             <span class=\"comment\">/* 权值 = 100+10+1=111 */</span></span></div><div class=\"line\"><span class=\"css\">             <span class=\"selector-tag\">color</span>:<span class=\"selector-id\">#00F</span>; <span class=\"comment\">/* 蓝色 */</span></span></div><div class=\"line\"><span class=\"undefined\"> </span></div><div class=\"line\"><span class=\"undefined\">        &#125;</span></div><div class=\"line\"><span class=\"undefined\"> </span></div><div class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#redP</span> <span class=\"selector-tag\">p</span> <span class=\"selector-tag\">span</span> <span class=\"selector-tag\">em</span> &#123;</span></div><div class=\"line\"><span class=\"css\">             <span class=\"comment\">/* 权值 = 100+1+1+1=103 */</span></span></div><div class=\"line\"><span class=\"css\">             <span class=\"selector-tag\">color</span>:<span class=\"selector-id\">#FF0</span>;<span class=\"comment\">/*黄色*/</span></span></div><div class=\"line\"><span class=\"undefined\">        &#125;</span></div><div class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"redP\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"red\"</span>&gt;</span>red</div><div class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>em red<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>red<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>结果：标签内的数据显示为蓝色。</p>\n<h3 id=\"CSS优先级法则\"><a href=\"#CSS优先级法则\" class=\"headerlink\" title=\"CSS优先级法则\"></a>CSS优先级法则</h3><p>比较样式的优先级是，只需统计不同选择器的个数，然后与对应的权值相乘即可。根据结果便可得出优先级。</p>\n<ol>\n<li>结果较大的优先级较高；</li>\n<li>结果相同，则<code>后定义</code>的优先级较高</li>\n<li>创作者的优先级高于浏览者，网页编写者设置的CSS样式的优先权高于浏览器所设置的样式。</li>\n<li>继承的CSS样式优先级低于后来指定的CSS样式</li>\n<li>若样式值中含有<code>!important</code>，则该值优先级最高</li>\n</ol>\n<p>看到这里，有些同学是不是对!important有点迷惑呀~为什么有了它，就优先级最高呐~下面我们再来详细讲一讲!important~</p>\n<h2 id=\"三、-important知识点\"><a href=\"#三、-important知识点\" class=\"headerlink\" title=\"三、!important知识点\"></a>三、!important知识点</h2><h3 id=\"important简介\"><a href=\"#important简介\" class=\"headerlink\" title=\"!important简介\"></a>!important简介</h3><p><code>!important</code> 是CSS1就定义的语法，作用是提高指定样式的应用优先权。</p>\n<p>语法格式：<code>{cssRule !important}</code>，即写在定义的最后面，例如：<code>box { color: red !important}</code></p>\n<p>声明了<code>!important</code>的样式，具有最高的优先级，相当于写在最下面（最后定义）</p>\n<h3 id=\"IE-6-0下的-important\"><a href=\"#IE-6-0下的-important\" class=\"headerlink\" title=\"IE 6.0下的!important\"></a>IE 6.0下的!important</h3><p>IE 6.0<code>不完全</code>支持!important</p>\n<p>IE支持重定义中的!important，例如：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.yuanxin</span> &#123; <span class=\"attribute\">color</span>:<span class=\"number\">#e00</span> <span class=\"meta\">!important</span>; &#125;</div><div class=\"line\"><span class=\"selector-class\">.yuanxin</span> &#123; <span class=\"attribute\">color</span>:<span class=\"number\">#000</span>; &#125;</div></pre></td></tr></table></figure>\n<p>你将会发现定义了样式<code>class=&quot;yuanxin&quot;</code>时，在IE下，字体显示为红色（#e00）。<br>但不支持同一定义中的<code>!important</code>。例如：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.yuanxin</span> &#123; <span class=\"attribute\">color</span>: <span class=\"number\">#e00</span> <span class=\"meta\">!important</span>; <span class=\"attribute\">color</span>: <span class=\"number\">#000</span>; &#125;</div></pre></td></tr></table></figure>\n<p>此时在IE6下不支持，你将会发现定义了样式<code>class=&quot;yuanxin&quot;</code>时，字体显示为黑色（#000）。</p>\n<p><strong>解释</strong>：</p>\n<p>important的样式属性和覆盖它的样式属性单独使用时(不在一个{}里)，IE 6.0认为!important优先级较高，否则当含!important的样式属性被同一个{}里的样式覆盖时，IE 6.0认为!important较低!<br>再举一个例子：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*样式1*/</span></div><div class=\"line\"><span class=\"selector-id\">#a</span>&#123;<span class=\"attribute\">width</span>:<span class=\"number\">100</span> <span class=\"meta\">!important</span>;&#125; <span class=\"comment\">/*有效*/</span></div><div class=\"line\"><span class=\"selector-id\">#a</span>&#123;<span class=\"attribute\">width</span>:<span class=\"number\">50px</span>;&#125; <span class=\"comment\">/*无效*/</span></div><div class=\"line\"><span class=\"comment\">/*样式2*/</span></div><div class=\"line\"><span class=\"selector-id\">#a</span>&#123;<span class=\"attribute\">width</span>:<span class=\"number\">100px</span> <span class=\"meta\">!important</span>; <span class=\"attribute\">width</span>:<span class=\"number\">50px</span>;&#125; <span class=\"comment\">/*width:100px无效，width:50px 有效*/</span></div></pre></td></tr></table></figure>\n<p>因为IE 6.0一直都不完全支持这个语法，而其他的浏览器都支持。因此我们就可以利用这一点来分别利用!important，我们可以针对IE和非IE浏览器设置不同的样式，只要在非IE浏览器样式的后面加上!important。</p>\n<p>完。</p>\n<hr>\n<p>总结内容参考以下：</p>\n<p><a href=\"http://www.w3school.com.cn/cssref/css_selectors.asp\" target=\"_blank\" rel=\"external\">w3school_CSS 选择器参考手册</a><br><a href=\"http://www.ruanyifeng.com/blog/2009/03/css_selectors.html\" target=\"_blank\" rel=\"external\">阮一峰_CSS选择器笔记</a><br><a href=\"http://www.jb51.net/css/67029.html\" target=\"_blank\" rel=\"external\">css选择器优先级深入理解</a><br><a href=\"http://www.cnblogs.com/xugang/archive/2010/09/24/1833760.html\" target=\"_blank\" rel=\"external\">CSS 的优先级机制[总结]</a></p>\n<p>十分感谢你们的分享~n(<em>≧▽≦</em>)n~</p>\n<p>注：原文章首发于：<a href=\"http://www.qdfuns.com/notes/15972/428bcf01ddf5adf75e5c3a3bdaccc44d.html\" target=\"_blank\" rel=\"external\">CSS选择器、优先级以及!important知识总结</a>，现迁移至此。</p>\n","categories":[],"tags":[]},{"title":"about","url":"http://hysunny.me/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://hysunny.me/category/index.html","content":"","categories":[],"tags":[]},{"title":"demo","url":"http://hysunny.me/demo/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://hysunny.me/link/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://hysunny.me/project/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://hysunny.me/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://hysunny.me/tag/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"http://hysunny.me/demo/div-css-adaptive-layout/BFC-2.html","content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>两栏布局-左定宽，右自动</title>\n    <style type=\"text/css\">\n        html,body,div{\n            margin: 0;\n            padding: 0;\n        }\n\n        .wrap_left{\n            float: left;\n            width: 200px;\n            background-color: red;\n        }\n        .wrap_right{\n            overflow: hidden;\n            background-color: green;\n        }\n    </style>\n</head>\n<body>\n<div class=\"wrap_left\">\n    我是左栏\n</div>\n<div class=\"wrap_right\">\n    我是右栏\n</div>\n</body>\n</html>","categories":[],"tags":[]},{"title":"","url":"http://hysunny.me/demo/div-css-adaptive-layout/BFC-3.html","content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>三栏布局-两侧定宽，中间自动</title>\n    <style type=\"text/css\">\n        html,body,div{\n            margin: 0;\n            padding: 0;\n        }\n\n        .wrap_left{\n            float: left;\n            width: 200px;\n            background-color: red;\n        }\n        .wrap_right{\n            float: right;\n            width: 200px;\n            background-color: green;\n        }\n        .wrap_content{\n            overflow: hidden;\n            background-color: yellow;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"wrap_left\">\n        我是左栏\n    </div>\n    <div class=\"wrap_right\">\n        我是右栏\n    </div>\n    <div class=\"wrap_content\">\n        我是中间栏\n</div>\n</body>\n</html>","categories":[],"tags":[]},{"title":"","url":"http://hysunny.me/demo/div-css-adaptive-layout/flex-2.html","content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>两栏栏布局-左定宽，右自动</title>\n    <style type=\"text/css\">\n        html,body,div{\n            margin: 0;\n            padding: 0;\n        }\n        .wrap{\n            display: flex;\n            display: -webkit-flex;\n        }\n        .wrap_left{\n            width: 200px;\n            background-color: red;\n        }\n        .wrap_right{\n            flex-grow:1;\n            -webkit-flex-grow:1;\n            background-color: green;\n        }\n    </style>\n</head>\n<body>\n<div class=\"wrap\">\n    <div class=\"wrap_left\">\n        我是左栏\n    </div>\n    <div class=\"wrap_right\">\n        我是右栏\n    </div>\n</div>\n</body>\n</html>","categories":[],"tags":[]},{"title":"","url":"http://hysunny.me/demo/div-css-adaptive-layout/flex-3.html","content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>三栏布局-两侧定宽，中间自动</title>\n    <style type=\"text/css\">\n        html,body,div{\n            margin: 0;\n            padding: 0;\n        }\n        .wrap{\n            display: flex;\n            display: -webkit-flex;\n        }\n        .wrap_left{\n            width: 200px;\n            background-color: red;\n        }\n        .wrap_right{\n            width: 200px;\n            background-color: green;\n        }\n        .wrap_content{\n            flex-grow:1;\n            -webkit-flex-grow:1;\n            background-color: yellow;\n        }\n    </style>\n</head>\n<body>\n<div class=\"wrap\">\n    <div class=\"wrap_left\">\n        我是左栏\n    </div>\n    <div class=\"wrap_content\">\n        我是中间栏\n    </div>\n    <div class=\"wrap_right\">\n        我是右栏\n    </div>\n</div>\n</body>\n</html>","categories":[],"tags":[]},{"title":"","url":"http://hysunny.me/demo/div-css-adaptive-layout/float-margin-2.html","content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>两栏布局-左定宽，右自动</title>\n    <style type=\"text/css\">\n        html,body,div{\n            margin: 0;\n            padding: 0;\n        }\n        .wrap{\n            margin: 10px;\n        }\n        .wrap_left{\n            float: left;\n            width: 200px;\n            background-color: red;\n        }\n        .wrap_right{\n            margin-left: 220px;\n            background-color: green;\n        }\n    </style>\n</head>\n<body>\n<div class=\"wrap\">\n    <div class=\"wrap_left\">\n        我是左栏\n    </div>\n    <div class=\"wrap_right\">\n        我是右栏\n    </div>\n</div>\n</body>\n</html>","categories":[],"tags":[]},{"title":"","url":"http://hysunny.me/demo/div-css-adaptive-layout/float-margin-3.html","content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>三栏布局-两侧定宽，中间自适应</title>\n    <style type=\"text/css\">\n        html,body,div{\n            margin: 0;\n            padding: 0;\n        }\n        .wrap_left{\n            width: 200px;\n            float: left;\n            background-color: red;\n        }\n\n        .wrap_content{\n            margin-left: 220px;\n            margin-right: 220px;\n            background-color: yellow;\n        }\n        .wrap_right{\n            width: 200px;\n            float: right;\n            background-color: green;\n        }\n\n\n    </style>\n</head>\n<body>\n<div class=\"wrap_left\">\n    我是左栏\n</div>\n<div class=\"wrap_right\">\n    我是右栏\n</div>\n<div class=\"wrap_content\">\n    我是中间栏\n</div>\n</body>\n</html>","categories":[],"tags":[]},{"title":"","url":"http://hysunny.me/demo/div-css-adaptive-layout/float-negative-margin-2.html","content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>两栏布局-左定宽，右自动</title>\n    <style type=\"text/css\">\n        html,body,div{\n            margin: 0;\n            padding: 0;\n        }\n        .wrap{\n            float: left;\n            width: 100%;\n        }\n        .wrap .wrap_right{\n            margin-left: 220px;\n            background-color: green;\n        }\n        .wrap_left{\n            float: left;\n            width: 200px;\n            margin-left: -100%;\n            background-color: red;\n        }\n\n    </style>\n</head>\n<body>\n<div class=\"wrap\">\n    <div class=\"wrap_right\">\n        我是右栏\n    </div>\n</div>\n<div class=\"wrap_left\">\n    我是左栏\n</div>\n</body>\n</html>","categories":[],"tags":[]},{"title":"","url":"http://hysunny.me/demo/div-css-adaptive-layout/float-negative-margin-3.html","content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>三栏布局-两侧定宽，中间自适应</title>\n    <style type=\"text/css\">\n        html,body,div{\n            margin: 0;\n            padding: 0;\n        }\n        .wrap{\n            float: left;;\n            width: 100%;\n        }\n        .wrap_left{\n            width: 200px;\n            float: left;\n            margin-left: -100%;\n            background-color: red;\n\n        }\n\n        .wrap_content{\n            margin-left: 220px;\n            margin-right: 220px;\n            background-color: yellow;\n        }\n        .wrap_right{\n            width: 200px;\n            float: left;\n            margin-left: -200px;\n            background-color: green;\n        }\n\n\n    </style>\n</head>\n<body>\n<div class=\"wrap\">\n    <div class=\"wrap_content\">\n        我是中间栏\n    </div>\n</div>\n<div class=\"wrap_left\">\n    我是左栏\n</div>\n<div class=\"wrap_right\">\n    我是右栏\n</div>\n\n</body>\n</html>","categories":[],"tags":[]},{"title":"","url":"http://hysunny.me/demo/div-css-adaptive-layout/position-margin-2.html","content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>两栏布局-左定宽，右自动</title>\n    <style type=\"text/css\">\n        html,body,div{\n            margin: 0;\n            padding: 0;\n        }\n        .wrap{\n            margin: 10px;\n            position: relative;\n        }\n        .wrap_left{\n            position: absolute;\n            width: 200px;\n            background-color: red;\n        }\n        .wrap_right{\n            margin-left: 220px;\n            background-color: green;\n        }\n    </style>\n</head>\n<body>\n<div class=\"wrap\">\n    <div class=\"wrap_left\">\n        我是左栏\n    </div>\n    <div class=\"wrap_right\">\n        我是右栏\n    </div>\n</div>\n</body>\n</html>","categories":[],"tags":[]},{"title":"","url":"http://hysunny.me/demo/div-css-adaptive-layout/position-margin-3.html","content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>三栏布局-两侧定宽，中间自适应</title>\n    <style type=\"text/css\">\n        html,body,div{\n            margin: 0;\n            padding: 0;\n        }\n        .wrap_left{\n            width: 200px;\n            position: absolute;\n            background-color: red;\n            left: 0;\n        }\n\n        .wrap_content{\n            margin-left: 220px;\n            margin-right: 220px;\n            background-color: yellow;\n        }\n        .wrap_right{\n            width: 200px;\n            position: absolute;\n            right: 0;\n            background-color: green;\n        }\n\n\n    </style>\n</head>\n<body>\n<div class=\"wrap_left\">\n    我是左栏\n</div>\n<div class=\"wrap_right\">\n    我是右栏\n</div>\n<div class=\"wrap_content\">\n    我是中间栏\n</div>\n</body>\n</html>","categories":[],"tags":[]},{"title":"","url":"http://hysunny.me/demo/div-css-adaptive-layout/table-2.html","content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>两栏布局-左定宽，右自动</title>\n    <style type=\"text/css\">\n        html,body,table{\n            margin: 0;\n            padding: 0;\n        }\n\n    </style>\n</head>\n<body>\n<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"1\" height=\"300\">\n    <tr>\n        <td width=\"200\" bgcolor=\"red\"></td>\n        <td bgcolor=\"green\"></td>\n    </tr>\n</table>\n</body>\n</html>","categories":[],"tags":[]},{"title":"","url":"http://hysunny.me/demo/div-css-adaptive-layout/table-3.html","content":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>三栏布局-两侧定宽，中间自动</title>\n    <style type=\"text/css\">\n        html,body,table{\n            margin: 0;\n            padding: 0;\n        }\n\n    </style>\n</head>\n<body>\n<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"1\" height=\"300\">\n    <tr>\n        <td width=\"200\" bgcolor=\"red\"></td>\n        <td bgcolor=\"yellow\"></td>\n        <td width=\"200\" bgcolor=\"green\"></td>\n    </tr>\n</table>\n</body>\n</html>","categories":[],"tags":[]}]